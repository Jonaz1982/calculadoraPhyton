name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main

variables:
  TF_VAR_location: "eastus"
  TF_VAR_environment: "dev"
  TF_VAR_resource_group_name: "rg-infra-dev"
  backend_storage_account: "tfbackendstorage"
  backend_container_name: "terraform-state"
  backend_key: "iac/terraform.tfstate"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Terraform_Deploy
    displayName: "Despliegue de Infraestructura en Azure"
    jobs:
      - job: DeployInfra
        displayName: "Terraform Init, Plan & Apply"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
              addToPath: true
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/calculadoraPhyton/iac'
              backendServiceArm: 'Conexi贸nAzureServicePrincipal'
              backendAzureRmResourceGroupName: 'rgtest'
              backendAzureRmStorageAccountName: 'rgterraformdevops01'
              backendAzureRmContainerName: 'terraform'
              backendAzureRmKey: '0Ku03ddwHLUiYsXpytRlhtByWebUIuwdSsAKsX7NCASDYQhPpY+qKJkRevrIsn0YD/41Jth3//Fq+AStZRCp5A=='

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/calculadoraPhyton/iac'
              environmentServiceNameAzureRM: 'Conexi贸nAzureServicePrincipal'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/calculadoraPhyton/iac'
              environmentServiceNameAzureRM: 'Conexi贸nAzureServicePrincipal'
          - task: AzureCLI@2
            inputs:
              azureSubscription: "Conexi贸nAzureServicePrincipal"
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                sudo apt-get update -y
                sudo apt-get install -y gnupg software-properties-common curl
                curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
                sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
                sudo apt-get update && sudo apt-get install terraform -y
                terraform -version
            displayName: "Instalar Terraform"

          - task: Bash@3
            displayName: "Inicializar Terraform"
            inputs:
              targetType: "inline"
              workingDirectory: "iac"
              script: |
                terraform init \
                  -backend-config="storage_account_name=$(backend_storage_account)" \
                  -backend-config="container_name=$(backend_container_name)" \
                  -backend-config="key=$(backend_key)" \
                  -backend-config="resource_group_name=$(TF_VAR_resource_group_name)" \
                  -upgrade

          - task: Bash@3
            displayName: "Plan Terraform"
            inputs:
              targetType: "inline"
              workingDirectory: "iac"
              script: |
                terraform plan -out=tfplan

          - task: Bash@3
            displayName: "Apply Terraform"
            inputs:
              targetType: "inline"
              workingDirectory: "iac"
              script: |
                terraform apply -auto-approve tfplan
