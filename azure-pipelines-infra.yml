name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main

variables:
  TF_VAR_location: "eastus"
  TF_VAR_environment: "dev"
  TF_VAR_resource_group_name: "rg-infra-dev"
  backend_storage_account: "tfbackendstorage"
  backend_container_name: "terraform-state"
  backend_key: "iac/terraform.tfstate"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Terraform_Deploy
    displayName: "Despliegue de Infraestructura en Azure"
    jobs:
      - job: DeployInfra
        displayName: "Terraform Init, Plan & Apply"
        steps:
          - task: UsePythonVersion@0
            displayName: "Seleccionar versión de Python 3.x"
            inputs:
              versionSpec: "3.x"
              addToPath: true

          - task: TerraformTaskV4@4
            displayName: "🌱 Terraform Init"
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/iac"
              backendServiceArm: "ConexiónAzureServicePrincipal"
              backendAzureRmResourceGroupName: "rgtest"
              backendAzureRmStorageAccountName: "rgterraformdevops01"
              backendAzureRmContainerName: "terraform"
              backendAzureRmKey: "iac/terraform.tfstate"

          - task: TerraformTaskV4@4
            displayName: "🔍 Terraform Plan"
            inputs:
              provider: "azurerm"
              command: "plan"
              workingDirectory: "$(System.DefaultWorkingDirectory)/iac"
              environmentServiceNameAzureRM: "ConexiónAzureServicePrincipal"

          - task: TerraformTaskV4@4
            displayName: "🚀 Terraform Apply"
            inputs:
              provider: "azurerm"
              command: "apply"
              workingDirectory: "$(System.DefaultWorkingDirectory)/iac"
              environmentServiceNameAzureRM: "ConexiónAzureServicePrincipal"
