trigger:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"
  timeoutInMinutes: 20

variables:
  python.version: "3.8"
  SONAR_HOST_URL: "https://sonarqube.imaginamos.com"
  SONAR_TOKEN: $(SONAR_TOKEN_SECRET)
  SONAR_PROJECT_KEY: "test-prueba-devops"

stages:
  - stage: PrepararEntorno
    displayName: "Preparar entorno"
    jobs:
      - job: Preparacion
        displayName: "Configurar entorno y herramientas"
        steps:
          - script: |
              echo "##[group]Versi칩n de Java"
              java -version
              echo "##[endgroup]"
            displayName: "Verificar Java preinstalado"

          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(python.version)
              addToPath: true
            displayName: "Configurar Python $(python.version)"

          - script: |
              python -m pip install --upgrade pip
              pip install pytest pytest-cov
            displayName: "Instalar dependencias Python"

          - script: |
              echo "##[group]Instalando SonarScanner"
              wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
              unzip sonar-scanner-cli-*.zip -d /opt
              rm sonar-scanner-cli-*.zip
              echo "##[endgroup]"
            displayName: "Instalar SonarScanner"

          - script: |
              echo "##vso[task.setvariable variable=SONAR_SCANNER_PATH]/opt/sonar-scanner-5.0.1.3006-linux/bin"
            displayName: "Exportar ruta de SonarScanner"

  - stage: PruebasYAnalisis
    displayName: "Ejecutar pruebas y an치lisis"
    dependsOn: PrepararEntorno
    jobs:
      - job: TestYSonar
        displayName: "Ejecutar pruebas y analizar con SonarQube"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(python.version)
              addToPath: true
            displayName: "Configurar Python $(python.version)"

          - script: |
              pip install pytest pytest-cov
            displayName: "Instalar dependencias de pruebas"

          - script: |
              echo "##[group]Ejecuci칩n de pruebas"
              python -m pytest test/ --cov=app --cov-report=xml:coverage.xml -v --junitxml=test-results.xml
              echo "##[endgroup]"
            displayName: "Ejecutar pruebas"

          - script: |
              echo "##[group]Ejecutando an치lisis SonarQube"
              export PATH=$(SONAR_SCANNER_PATH):$PATH
              sonar-scanner \
                -Dsonar.projectKey=$(SONAR_PROJECT_KEY) \
                -Dsonar.projectName="test-prueba-devops" \
                -Dsonar.projectVersion=1.0 \
                -Dsonar.sources=app \
                -Dsonar.tests=test \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.xunit.reportPath=test-results.xml \
                -Dsonar.host.url=$(SONAR_HOST_URL) \
                -Dsonar.login=$(SONAR_TOKEN) \
                -Dsonar.python.version=$(python.version)
              echo "##[endgroup]"
            displayName: "Analizar con SonarQube"
