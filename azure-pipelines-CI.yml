name: $(Build.DefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  python.version: "3.8"
  SONAR_HOST_URL: "https://sonarqube.imaginamos.com"
  SONAR_PROJECT_KEY: "test-prueba-devops"

pool:
  vmImage: "ubuntu-latest"
  timeoutInMinutes: 30

stages:
  - stage: BuildAndTest
    displayName: "Build, Test & SonarQube Analysis"
    jobs:
      - job: RunTestsAndAnalysis
        displayName: "Run Tests & SonarQube Scan"
        steps:
          # 1. Configurar Python
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(python.version)
              addToPath: true
            displayName: "Set up Python $(python.version)"

          # 2. Instalar dependencias
          - script: |
              python -m pip install --upgrade pip
              pip install pytest pytest-cov
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            displayName: "Install dependencies"

          # 3. Instalar SonarScanner
          - script: |
              echo "##[group]Installing SonarScanner"
              wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
              unzip -q sonar-scanner-cli-*.zip -d /opt
              rm sonar-scanner-cli-*.zip
              echo "##vso[task.prependpath]/opt/sonar-scanner-5.0.1.3006-linux/bin"
              echo "##[endgroup]"
            displayName: "Install SonarScanner"

          # 4. Ejecutar pruebas con cobertura
          - script: |
              echo "##[group]Running tests with coverage"
              python -m pytest test/ --cov=app --cov-report=xml:coverage.xml -v --junitxml=test-results.xml
              echo "##[endgroup]"
            displayName: "Run tests with coverage"

          # 5. An√°lisis con SonarQube
          - script: |
              echo "##[group]Running SonarQube Analysis"
              sonar-scanner \
                -Dsonar.projectKey=$(SONAR_PROJECT_KEY) \
                -Dsonar.projectName="test-prueba-devops" \
                -Dsonar.projectVersion=1.0 \
                -Dsonar.sources=app \
                -Dsonar.tests=test \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.xunit.reportPath=test-results.xml \
                -Dsonar.host.url=$(SONAR_HOST_URL) \
                -Dsonar.login=$(SONAR_TOKEN) \
                -Dsonar.python.version=$(python.version) \
                -Dsonar.verbose=true
              echo "##[endgroup]"
            displayName: "Run SonarQube Analysis"
            env:
              SONAR_TOKEN: $(SONAR_TOKEN_SECRET)

          # 6. Publicar artefactos (opcional para CD)
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)
              artifact: "drop"
              publishLocation: "pipeline"
            displayName: "Publish build artifacts"
