name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore

pool:
  vmImage: "ubuntu-latest"
  timeoutInMinutes: 30

variables:
  python.version: "3.8"
  SONAR_HOST_URL: "https://sonarqube.imaginamos.com"
  SONAR_TOKEN: $(SONAR_TOKEN_SECRET)
  SONAR_PROJECT_KEY: "test-prueba-devops"
  buildArtifactName: "drop"
  system.debug: false

stages:
  - stage: BuildAndTest
    displayName: "Build y Pruebas"
    jobs:
      - job: Build
        displayName: "Compilación y Análisis"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(python.version)
              addToPath: true
            displayName: "Configurar Python $(python.version)"

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: "Instalar dependencias"

          - script: |
              echo "##[group]Instalación SonarScanner"
              wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
              unzip -q sonar-scanner-cli-*.zip -d /opt
              rm sonar-scanner-cli-*.zip
              echo "##vso[task.prependpath]/opt/sonar-scanner-5.0.1.3006-linux/bin"
              echo "##[endgroup]"
            displayName: "Instalar SonarScanner"

          - script: |
              echo "##[group]Ejecutando pruebas"
              python -m pytest test/ --cov=app --cov-report=xml:coverage.xml -v --junitxml=test-results.xml
              echo "##[endgroup]"
            displayName: "Ejecutar pruebas unitarias"

          - script: |
              echo "##[group]Análisis SonarQube"
              sonar-scanner \
                -Dsonar.projectKey=$(SONAR_PROJECT_KEY) \
                -Dsonar.projectName="test-prueba-devops" \
                -Dsonar.projectVersion=1.0 \
                -Dsonar.sources=app \
                -Dsonar.tests=test \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.xunit.reportPath=test-results.xml \
                -Dsonar.host.url=$(SONAR_HOST_URL) \
                -Dsonar.login=$(SONAR_TOKEN) \
                -Dsonar.python.version=$(python.version)
              echo "##[endgroup]"
            displayName: "Ejecutar análisis de código"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)"
              artifact: $(buildArtifactName)
              publishLocation: "pipeline"
            displayName: "Publicar artefacto"
